---
  - hosts: all
    become: yes
    tasks:

    - name: Get system architecture
      command: hostnamectl
      register: hostnamectl_output
      become: yes

    - name: Set architecture fact
      set_fact:
        system_architecture: "{{ 'arm64' if 'Architecture: arm64' in hostnamectl_output.stdout else 'x86-64' }}"

    - name: Debug message after setting architecture fact
      debug:
        msg: "System architecture set to {{ system_architecture }} on {{ inventory_hostname }}."

    - name: Update package list
      apt:
        update_cache: yes
      become: true

    - name: Debug message after updating package list
      debug:
        msg: "Package list updated successfully on {{ inventory_hostname }}."

    - name: Install common packages
      apt:
        name: 
          - git
          - nfs-common
          - net-tools
          - htop
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - curl
          - unzip
          - zip
          - nano
          - grep
          - tree
          - ntp
          - ntpstat
          - ntpdate
        update_cache: yes
        cache_valid_time: 86400
        state: latest
      become: true

    - name: Add InfluxData GPG key
      shell: |
        curl --silent --location -O https://repos.influxdata.com/influxdata-archive.key
        echo "943666881a1b8d9b849b74caebf02d3465d6beb716510d86a39f6c8e8dac7515  influxdata-archive.key" | sha256sum -c -
        cat influxdata-archive.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive.gpg > /dev/null
      become: yes

    - name: Add InfluxData repository
      shell: |
        echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list
      become: yes

    - name: Update package list after adding InfluxData repository
      apt: update_cache=yes
      become: true
    - name: Debug message after updating package list
      debug:
        msg: "Package list updated successfully on {{ inventory_hostname }}."

    - name: Install Telegraf
      apt:
        name: telegraf
        state: latest
      become: true
    - name: Debug message after installing Telegraf
      debug:
        msg: "Telegraf installed successfully on {{ inventory_hostname }}."

    - name: Copy telegraf.conf for arm64 architecture
      copy:
        src: config_files/telegraf/telegraf_pi.conf
        dest: /etc/telegraf/telegraf.conf
        owner: root
        group: root
        mode: 0644
      become: yes
      when: system_architecture == 'arm64'

    - name: Debug message after copying telegraf.conf for arm64 architecture
      debug:
        msg: "telegraf_pi.conf copied successfully to /etc/telegraf/telegraf.conf on {{ inventory_hostname }}."
      when: system_architecture == 'arm64'

    - name: Copy telegraf.conf for x86-64 architecture
      copy:
        src: config_files/telegraf/telegraf_ubuntu.conf
        dest: /etc/telegraf/telegraf.conf
        owner: root
        group: root
        mode: 0644
      become: yes
      when: system_architecture == 'x86-64'

    - name: Debug message after copying telegraf.conf for x86-64 architecture
      debug:
        msg: "telegraf_ubuntu.conf copied successfully to /etc/telegraf/telegraf.conf on {{ inventory_hostname }}."
      when: system_architecture == 'x86-64'
      
    - name: Restart Telegraf
      service:
        name: telegraf
        state: restarted
        enabled: yes
      become: yes
    - name: Debug message after restarting Telegraf
      debug:
        msg: "Telegraf service restarted and enabled on {{ inventory_hostname }}."

    - name: Wait for 20 seconds
      wait_for:
        timeout: 20
    - name: Debug message after waiting for 20 seconds
      debug:
        msg: "Waited for 20 seconds on {{ inventory_hostname }}."

    - name: Get Telegraf status
      shell: systemctl status telegraf
      register: telegraf_status

    - name: Debug message after getting Telegraf status
      debug:
        msg: "Telegraf status on {{ inventory_hostname }}: {{ telegraf_status.stdout }}"
      when: telegraf_status.rc != 0

    - name: Debug message for successful Telegraf status
      debug:
        msg: "Telegraf is running successfully on {{ inventory_hostname }}."
      when: telegraf_status.rc == 0